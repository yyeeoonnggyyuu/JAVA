프로젝트 들어갈 때 제약조건을 넣어서 데이터베이스를 만들어야함

예제 8-18
학생 테이블에 다음과같이 레코드 3건을 추가하시오 . 오류가 발생한다면 이유가 무엇인지 생각해 봅니다

/*예제8-18*/
INSERT INTO 학생(학번, 이름, 생일, 학과번호) 
VALUES ('S0001','이윤주','2020-01-30','AA');

INSERT INTO 학생(이름, 생일, 학과번호)   Error code 1364
VALUES ('이승은','2021-02-23','AA');   
여기서 학번이 같으면 Error code가 뜸 (예제 8-13에서 학과번호는 primary key로 설정해서 중복은 안됨)

INSERT INTO 학생(학번, 이름, 생일, 학과번호)  Error code 1452
VALUES ('S0003','백재용','2018-03-31','DD'); 
외래키 설정으로 DD는 설정되어있지 않으므로 안들어감 CC로 넣어야함
예제 8-13에서 학과번호는 학과의 학과번호에서참조하여서 여기에 CC까지밖에 없으므로 DD는 안들어감
CC까지 밖에 설정안한검 예제 8-2 INSERT INTO 학과 VALUES

--------------------------------------------------------------------

/*예제8-19*/
과목 테이블에 다음과 같이 레코드 3건을 추가하시오, 오류가 발생한다면 이유가 무엇인지 생각해봅니다.
INSERT INTO 과목(과목번호, 과목명, 구분)
VALUES ('C0001','데이터베이스실습', '전공');
오류발생 Error code 1136
예제 8-14에서  학점을 not null이라고 제약조건을걸어둬서 에러발생

INSERT INTO 과목(과목번호, 과목명, 구분, 학점)
VALUES ('C0002','데이터베이스 설계와 구축', '전공', 5);
오류발생 Error code 3819
예제 8-14에서  학점을 2~4까지 설정해두었기때문에 5는 안됨

INSERT INTO 과목(과목번호, 과목명, 구분, 학점)
VALUES ('C0003','데이터 분석', '전공', 3);


/*오류 수정*/
INSERT INTO 과목(과목번호, 과목명, 구분, 학점)
VALUES ('C0001','데이터베이스실습', '전공', 3);

INSERT INTO 과목(과목번호, 과목명, 구분, 학점)
VALUES ('C0002','데이터베이스 설계와 구축', '전공', 3);
---------------------------------------------------------------
/*예제8-20*/
수강 _1 테이블에 다음과 같이 레코드 4건을 추가하시오. 오류가 발생한다면 이유가 무엇인지 생각해봅니다.
INSERT INTO 수강_1(수강년도, 수강학기, 학번, 과목번호, 성적)
VALUES('2023','1학기','S0001','C0001',4.3);
오류 x

INSERT INTO 수강_1(수강년도, 수강학기, 학번, 과목번호, 성적)
VALUES('2023','1학기','S0001','C0001',4.5);
오류 o 위의 학번과 과목번호가 중복
Error Code 1062

INSERT INTO 수강_1(수강년도, 수강학기, 학번, 과목번호, 성적)
VALUES('2023','1학기','S0001','C0002',4.6);
오류 0 성적에서 0~4.5로 설정되어서 4.6은 오류 발생
Error Code 3819

INSERT INTO 수강_1(수강년도, 수강학기, 학번, 과목번호, 성적)
VALUES('2023','1학기','S0002','C0009',4.3);
과목번호가 C0009까지는 안됨 
Error Code 1452


오류 

학번과 과목번호가 모두 프라이머리키와 포렌키를 설정해서 
두가지 모두가 같을 경우만 에러발생 둘중 하나라도 다르면 에러는 발생하지 않는다
/*오류 수정*/
INSERT INTO 수강_1(수강년도, 수강학기, 학번, 과목번호, 성적)
VALUES('2023','1학기','S0001','C0002',4.4);

INSERT INTO 수강_1(수강년도, 수강학기, 학번, 과목번호, 성적)
VALUES('2023','1학기','S0002','C0002',4.3);

-----------------------------------------------------------------------
/*예제8-21*/
수강_1에서 넣은것과 동일하게 수강_2 테이블에 2개의 레코드를 추가해보시오

수강_2는 프라이머리키를 순차적으로 자동생성하게 코드를 짰기 때문에 
위의 수강_1과 다르게 학번과 과목번호 모두가 중복되어도 에러발생하지않음 
예제 8-16 에서의  "수강번호 INT PRIMARY KEY AUTO_INCREMENT " AUTO_INCREMENT 이게 순차적은로 생성하게해줌   
INSERT INTO 수강_2(수강년도, 수강학기, 학번, 과목번호, 성적)
VALUES('2023','1학기','S0001','C0001',4.3);

INSERT INTO 수강_2(수강년도, 수강학기, 학번, 과목번호, 성적)
VALUES('2023','1학기','S0001','C0001',4.5);
-------------------------------------------------------------------------------------
제약조건을 나중에 추가하고싶거나 수정하고 싶을 때 
ALTER TABLE 데이블명 ADD CONSTRAINT 제약조건(컬럼명);

/*예제8-22*/
학생테이블의 학번 컬럼에 CHECK 제약조건을 추가하시오. (제약조건:모든 학번은 'S'로 시작한다.
ALTER TABLE 학생 ADD CONSTRAINT CHECK(학번 LIKE 'S%');
학번이 S로 시작되는 제약조건을 추가해줘


/*예제8-23*/
학생테이블에 설정되어 있는 제약조건 명세를 확인하시오

SELECT *
FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
WHERE CONSTRAINT_SCHEMA = '한빛학사'
AND TABLE_NAME = '학생';
한빛박사의 학생테이블에 있는 제약조건을 보여줘 라는 select문
-------------------------------------------------------------------------------------

/*예제8-24*/
제약조건의 삭제
형식 - 
ALTER TABLE 테이블명 DROP CONSTRAINT 제약조건명;

학생테이블에 설정되어 있는 제약조건 중 연락처에 설정되어 있는 제약조건을 삭제하시오
ALTER TABLE 학생 DROP CONSTRAINT 연락처;

/*예제8-25*/
성별 컬럼에 설정되어 잇는 check 제약조건을 삭제하시오
- 학생테이블에 걸려있는 check 제약조건 2개를 삭제하고 학번에 설정했던 check제약조건은 다시 설정

ALTER TABLE 학생 DROP CONSTRAINT 학생_chk_1;

ALTER TABLE 학생 DROP CONSTRAINT 학생_chk_2;

ALTER TABLE 학생 ADD CHECK (학번 LIKE 'S%');
-------------------------------------------------------------------------------------
제약조건명의 지정
제약조건에는 고유한 이름을 지정하여 관리할 수 있음


/*예제8-26*/
예제 8-13에 있는 학생 테이블의 구조를 사요앟여 학생_2 테이블을 생성하시오 . 이때 제약조건명을 지정하여 생성
CREATE TABLE 학생_2
    (
       학번 CHAR(5),
       이름 VARCHAR(20) NOT NULL,
       생일 DATE NOT NULL,
       연락처 VARCHAR(20),
       학과번호 CHAR(2),
       성별 CHAR(1),
       등록일 DATE DEFAULT(CURDATE()),
       PRIMARY KEY(학번),
       CONSTRAINT UK_학생2_연락처 UNIQUE(연락처),	학생의 연락처에 유니크값을 넣은 제약조건(UK_학생2_연락처 )
       CONSTRAINT CK_학생2_성별 CHECK(성별 IN ('남','여')),				CK_학생2_성별
       CONSTRAINT FK_학생2_학과번호 FOREIGN KEY (학과번호) REFERENCES 학과(학과번호) 	FK_학생2_학과번호
    ); 

-------------------------------------------------------------------------------------
외래키 제약조건의 옵션
ON DELETE
	CASCADE -  부모 레코드 삭제 시 자식 레코드도 연쇄적으로 삭제
	SET NULL - 부모 레코드 삭제 시 자식 레코드이 외래키 값이 NULL로 변경된다
	SET DEFAULT - 부모 레코드 삭제 시 자식 레코드의 외래키 값이 기본값으로 변경된다.
	NO ACTION(기본값) - 자식 레코드가 있으면 부모 레코드를 삭제할 수 없다.
ON UPDATE
	CASCADE - 부모 레코드의 기본키 수정 시 자식 레코드의 외래키 값도 연쇄적으로 수정된다  
	SET NULL - 부모 레코드의 기본키 수정 시 자식 레코드의 외래키 값이 NULL로 변경된다.
	SET DEFAULT - 부모 레코드의 기본키 수정 시 자식 레코드의 외래키 값이 기본값으로 변경된다.
	NO ACTION(기본값) - 자식 레코드가 있으면 부모 레코드의 기본키 값을 수정할 수 없다.

/*예제8-27*/
수강평가 테이블을 생성하시오  이때 평가순번은 자동번호로 생성합니다.(= AUTO_INCREMENT)
또한 과목테이블에서 레코드를 삭제하면 수강평가 테이블에서도 해당 과목에 대한 평가 레코드가 삭제되도록 옵션을 설정

create table 수강평가
(
평가순번 INT PRIMARY KEY AUTO_INCREMENT
,학번 CHAR(5) not null
,과목번호 char(5) not null
,평점 int check(평점 between 0 and 5)
,과목평가 VARCHAR(500)
,평가일시 datetime default current_timestamp
,foreign key (학번) references 학생(학번)
,foreign key (과목번호) references 과목(과목번호) on delete cascade
);

외래키 제약조건을 넣을 때 
on delete cascade 를 넣어 부모 레코드 삭제시 자식 레코드도 연쇄적으로 삭제한다

-------------------------------------------------------------------------------------
/*예제8-28*/
수강평가 테이블에 4건의 레코드를 추가하시오

INSERT INTO 수강평가(학번, 과목번호, 평점, 과목평가)
VALUES('S0001','C0001',5,'SQL학습에 도움이 되었습니다.')
,('S0001','C0003',5,'SQL 활용을 배워서 좋았습니다.')
,('S0002','C0003',5,'데이터 분석에 관심이 생겼습니다.')
,('S0003','C0003',5,'머신러닝과 시각화 부분이 유용했습니다.');

-------------------------------------------------------------------------------------
과목을 삭제했지만 수강평가에서도 삭제되어야함 

/*예제8-29*/
과목테이블에서 'c0003' 과목을 삭제하시오. 그리고 과목 테이블과 수강평가 테이블에서 결과를 확인해봅니다

여기서 과목을 삭제해보고 과목번호가 삭제되는지 확인해보기
과목에서 c0003이 없어졌는지 확인해보고
수강평가 도 삭제되엇는지 확인해보기 위에서 on delete cascade를 했기때문에 자식레코드도 삭제되는게 정상
DELETE FROM 과목 WHERE 과목번호 = 'C0003';

SELECT * FROM 과목;
SELECT * FROM 수강평가;

그러므로 과목에서는 c0003만 삭제 수강평가에서는 c0003인 3개가 삭제됨

-------------------------------------------------------------------------------------

/*예제8-30*/
과목테이블에서 'C0001' 과목을 삭제하시오. 오류가 난다면 이유를 생각해봅니다.
DELETE FROM 과목 WHERE 과목번호 = 'C0001';

Error Code 1451이 발생함

답
포렌키가 어떻게 되어있는지 명확하게 확인 해야함

C0003은 연관된게 없어서 삭제가능

C0001은 수강_1과 연결되어있어서 삭제가 안됨 (이부분 확인)

수강_1을 생성했던 코드 확인해보면 (예제 8-15)
   ,FOREIGN KEY (과목번호) REFERENCES 과목(과목번호) 
이렇게 연겷해놔서안됨
-------------------------------------------------------------------------------------



















